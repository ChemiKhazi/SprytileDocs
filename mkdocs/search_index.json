{
    "docs": [
        {
            "location": "/",
            "text": "Sprytile Documentation\n\u00b6\n\n\n\n\nA tile map editor addon for Blender\n\n\nTutorials\n\u00b6\n\n\nNew to Sprytile? Dive in with the \nQuick Start\n tutorial.\n\n\nGot the basics? Move onwards to the \nAdvanced Features\n tutorial.\n\n\nGuides\n\u00b6\n\n\n\n\nCreating Tilesets\n\n\nUsing Tilesets\n\n\nSketchfab Export",
            "title": "Home"
        },
        {
            "location": "/#sprytile-documentation",
            "text": "A tile map editor addon for Blender",
            "title": "Sprytile Documentation"
        },
        {
            "location": "/#tutorials",
            "text": "New to Sprytile? Dive in with the  Quick Start  tutorial.  Got the basics? Move onwards to the  Advanced Features  tutorial.",
            "title": "Tutorials"
        },
        {
            "location": "/#guides",
            "text": "Creating Tilesets  Using Tilesets  Sketchfab Export",
            "title": "Guides"
        },
        {
            "location": "/quick-start/",
            "text": "Quick Start Tutorial\n\u00b6\n\n\nThis is a short tutorial on how to install and use Sprytile, an open source tile map editor addon for Blender.\n\n\nWe'll be using the following tile set image for this tutorial, but feel free to use your own tileset to follow along.\n\n\n\n\nYou can also follow along with the \nvideo tutorial\n\n\nInstallation\n\u00b6\n\n\nDownload the zip file from the \nSprytile page\n.\n\n\nIn Blender, open User Preferences by going to \nFile > User Preferences\n. Go to the Add-ons tab and press  \nInstall from File\n at the bottom of the preference window and navigate to the downloaded zip file. After installation, search for Sprytile under Community addons and enable it.\n\n\n\n\n\n\nTo make sure Blender shows pixel art textures correctly, we have to turn off mipmaps in 3D view. In the preferences window, switch over to the \nSystem\n tab and turn off the Mipmaps option under OpenGL.\n\n\n\n\nNext, make sure that Blender is using the Blender Renderer by going back to the main window and checking the renderer dropdown near the top.\n\n\n\n\nWith Sprytile installed and setup, let's start a new Blender file by going to \nFile > New\n. Make sure the tool shelf panel to the left of the 3D view is open. If it is not, press \nT\n and find the Sprytile tab. If the Sprytile tab is missing, check the installation steps again.\n\n\n\n\nFuture Uses\n\n\nPress the \nSave User Settings\n button if you want to continue using Sprytile in future Blender sessions without going back to User Preferences\n\n\n\n\nMaterial Setup\n\u00b6\n\n\nBefore using the Sprytile tools, the tile set has to be loaded into the material. With a mesh object selected, go to the Materials tab in the Properties View, then press \nSet Material to Shadeless\n in the Sprytile panel.\n\n\n\n\nNext, go to the Textures tab in the Properties view and load your tile set image into the material.\n\n\n\n\nAfter loading the image, go back to the Sprytile tab and press \nSetup Pixel Texture\n.\n\n\n\n\nSprytile Tools\n\u00b6\n\n\nThe majority of Sprytile's tools are accessed under \nEdit Mode\n. With a mesh object selected, enter edit mode and open the tool shelf to the Sprytile tab. Press \nT\n to open the tool shelf if it is hidden from the left of the 3D view. Expand the tool shelf if it is too cramped.\n\n\n\n\n\n\nPixel Density\n\n\nIf you're not using the provided tile set, you might want to change the world pixel density setting. This sets how many pixels fit inside one Blender unit. The provided tile set is based around 32x32 pixel tiles.\n\n\n\n\n\n\nBackface Culling\n\n\nIt is recommended to turn off backface culling so you can see the direction the faces are being built in. This is accessible in the right hand panel of the viewport (press 'n' if it is not visible), under the shading foldout.\n\n\n\n\nBuild Mode\n\u00b6\n\n\nThe build tool creates mesh faces that are UV mapped to the selected tiles. Open Sprytile's tile map mode by pressing the \nBuild\n button. You will notice the tile selection UI popup on the lower right corner of the 3D view, indicating that tile map mode is active.\n\n\nExit tile map mode by pressing the \nBuild\n button again or by pressing the \nEsc\n key. Pressing \nCtrl + Shift + Space\n on the keyboard will activate tile map mode again.\n\n\n\n\n\n\nTile Selection UI\n\n\nThe tile selection UI lets you pick the tile you will be painting with. Zoom the UI by hovering over it and scrolling your mouse wheel up or down.\n\n\n\n\nTile Building Workflow\n\u00b6\n\n\nNow to get familiar with Sprytile's workflow by building something!\n\n\nFirst, delete the existing vertices of the selected mesh so we have a blank slate. Do this by pressing \na\n to select all, and then pressing \nx\n and selecting \nVertices\n.\n\n\nThe workflow of Sprytile revolves around Blender's 3D cursor and the direction the 3D view is facing.\n\n\nThe 3D cursor is the center of the tile grid when you're painting, and the global axis that the view is facing is the surface you will be painting on.\n\n\nLet's start by reseting the 3D cursor to the center of the scene by pressing \nShift + S\n and selecting \nCursor to Center\n.\n\n\n\n\nWith the tile selection UI open, try rotating the 3D view camera around. Hold down the middle mouse button while the mouse cursor is in the 3D view and move the mouse.\n\n\n\n\nNotice that a grid appears around the blender 3D cursor. This is called the work plane and indicates the plane that you'll be building on.\n\n\nBy default, the work plane appears when the view camera is panned. If it does not, \ncheck the settings\n.\n\n\nTilt the camera downwards so that the work plane is aligned to the ground.\n\n\nIn the tile selection UI, choose the grass tile and paint around the 3D cursor. Notice how the tile grid is centered around the 3D cursor and the painted tiles appear on the ground.\n\n\n\n\nNow pan the camera up so the work plane is vertical. Pick a wall tile and paint with the tile.\n\n\n\n\n\n\nAxis Indicator\n\n\nWhile tile map mode is activated, the axis indicator in the Sprytile Painter panel will update to show you which axis the tiles will be painted on.\n\n\n\n\n\n\nSince the 3D cursor is an important part of the Sprytile workflow, you can quickly reposition the cursor to the vertex nearest the mouse cursor by holding down the \nS\n key while in tile map mode. To make navigation easier, pressing the \nW\n key will center the 3D view around the cursor.\n\n\n\n\nTry reorienting the 3D view to face the last axis you have yet to paint on, then moving the 3D cursor by holding down the \nS\n key and moving your mouse. Paint on that axis. Note that the center of the grid has moved to where you have positioned the cursor.\n\n\n\n\n\n\nBeta software!\n\n\nSprytile is still in beta. If Sprytile stops responding during this tutorial, use the reset function under the utilities dropdown.\n\n\n\n\n\n\nTile Grids\n\u00b6\n\n\nNow that you know how to use Sprytile, let's focus on tile grids. Tile maps might be made up of tiles in different scales. To account for this, Sprytile allows you to paint tiles in different sizes. This part of the Sprytile panel allows you to create and organize the grid settings used with the tile map.\n\n\nPress the \n+\n button at the panel and select the newly created entry. The settings for this new tile grid can be changed in the boxes below. For this tile grid, lets change it to a 16 x 16 tile size.\n\n\n\n\n\n\nYou can see that the tile selection UI updates to show the currently selected tile grid as well. You can change the tile grid selection by using the tile grid selector in the tools panel.\n\n\nYou can also change tile grids by holding \nCtrl\n with your mouse over the tile selection UI and scrolling the mousewheel up or down.\n\n\nTile Flipping/Rotation\n\u00b6\n\n\nLooking closely at the last wall we created, we can see that the texture gets very repetitive. Delete part of that wall and recreate the wall using the 16x16 tile grid. By using the smaller grid, we can break up the pattern created by the larger tile size.\n\n\n\n\nBut even with the smaller tiles, the repetition is still visible. With tile map editors, you can further break up the patterns by rotating and flipping tiles. To do that, we use this part of the Sprytile panel.\n\n\n\n\nThe keyboard shortcuts for rotating tiles left and right are the \n1\n and \n2\n keys.\n\n\nThe \n3\n key toggles Flip X and the \n4\n key toggles Flip Y.\n\n\nRepaint the wall using the tile flipping and rotation options.\n\n\n\n\nTile Picker\n\n\nYou can pick tiles from your scene like in Photoshop. Hold down the \nalt\n key and select a tile from the scene with a left mouse click.\n\n\n\n\n\n\nPixel Translate\n\u00b6\n\n\nThis wall is placed in an awkward position. Sprytile makes moving faces easier in tile map mode by constraining movement to the pixel grid. Select the wall faces and split them by pressing the \nY\n key. Now translate the selection by pressing the \nG\n key. The movement snaps to the pixel grid and a readout showing the movement is shown on the top left corner.\n\n\n\n\nBuild Mode Automerge\n\n\nIt's necessary to split the faces because build mode automatically merges close vertices by default. You can turn off this option by toggling \nAuto Merge\n beneath the tile rotation/flip section.\n\n\n\n\n\n\nUse the pixel translation tool to move the wall to a more sensible place. The movement is restricted along the work plane, so rotate the 3D view when necessary. Pixel translate is automatically used when in tile map mode.\n\n\n\n\n\n\nSnap Translate Vertices\n\n\nBy default, pixel translate will snap the selected vertices to the pixel grid around the 3D cursor. This can be turned off using the \nSnap Translate\n option in the Workflow panel.\n\n\n\n\nPaint Mode\n\u00b6\n\n\nFinally, we'll cover paint mode. Paint mode gives you tools to quickly UV map faces to tiles, allowing you to build your mesh with other Blender tools. Let's extrude the edges of the grass without using tile map mode so that the geometry isn't on the pixel grid anymore.\n\n\n\n\nNext, turn on paint mode by pressing the \nPaint\n button in the Sprytile panel. Using the 32x32 tile grid, select the tile that is the border of the grass and the ground.\n\n\n\n\nNow try painting the tile on one of the extruded faces. The texture appears stretched because of the current paint settings.\n\n\n\n\nChange the paint settings to the following and try painting the faces again.\n\n\n\n\nNow the grass/ground boundary appears because UV mapping of the face is being aligned to the top of the tile. Continue painting the other extruded faces.\n\n\n\n\nAdvanced Painting\n\u00b6\n\n\nPaint mode allows for easy UV mapping even when the face is not aligned to the global XYZ axis. Using the create tab, make a low poly\ncylinder and rotate it so it is not aligned to the global XYZ axis.\n\n\n\n\nSwitch to the 16x16 tile grid and select the following tile. Make sure that grid rotation is back at 0 and that Flip X and Y are off.\n\n\n\n\nIf you try painting the outer faces of the cylinder, you will notice that the alignment of the UV is not correct. To fix this, we can use hinting mode. Toggle on hinting in the Sprytile panel.\n\n\n\n\nSwitch to edge selection mode and select one of the cylinder's edges along the long side. Then paint on the faces connected to the selected edge and notice that the UV mapping is now properly aligned to the face.\n\n\n\n\nWhat hinting does is indicate to Sprytile which side of the face will be aligned to the horizontal axis of the tile map.\n\n\nThe cylinder still doesn't look like our selected tile. To fix this, we can use the stretch options on the paint tool.\n\n\n\n\nWith the stretch options on, repeat painting the faces as with the previous step. Now the faces will be UV mapped with the selected tile stretched out over each face, looking more like the metallic pipe of the selected tile.\n\n\n\n\nConclusion\n\u00b6\n\n\nThis tutorial gives an overview of Sprytile's basic functions, hopefully enough to help you to build cool things with it.\n\n\nFor more advanced uses of Sprytile, check the \nAdvanced Features\n tutorial page.\n\n\nIf you have any questions, feel free to contact me on \ntwitter\n or via the \nitch.io discussion boards\n.",
            "title": "Quick Start"
        },
        {
            "location": "/quick-start/#quick-start-tutorial",
            "text": "This is a short tutorial on how to install and use Sprytile, an open source tile map editor addon for Blender.  We'll be using the following tile set image for this tutorial, but feel free to use your own tileset to follow along.   You can also follow along with the  video tutorial",
            "title": "Quick Start Tutorial"
        },
        {
            "location": "/quick-start/#installation",
            "text": "Download the zip file from the  Sprytile page .  In Blender, open User Preferences by going to  File > User Preferences . Go to the Add-ons tab and press   Install from File  at the bottom of the preference window and navigate to the downloaded zip file. After installation, search for Sprytile under Community addons and enable it.    To make sure Blender shows pixel art textures correctly, we have to turn off mipmaps in 3D view. In the preferences window, switch over to the  System  tab and turn off the Mipmaps option under OpenGL.   Next, make sure that Blender is using the Blender Renderer by going back to the main window and checking the renderer dropdown near the top.   With Sprytile installed and setup, let's start a new Blender file by going to  File > New . Make sure the tool shelf panel to the left of the 3D view is open. If it is not, press  T  and find the Sprytile tab. If the Sprytile tab is missing, check the installation steps again.   Future Uses  Press the  Save User Settings  button if you want to continue using Sprytile in future Blender sessions without going back to User Preferences",
            "title": "Installation"
        },
        {
            "location": "/quick-start/#material-setup",
            "text": "Before using the Sprytile tools, the tile set has to be loaded into the material. With a mesh object selected, go to the Materials tab in the Properties View, then press  Set Material to Shadeless  in the Sprytile panel.   Next, go to the Textures tab in the Properties view and load your tile set image into the material.   After loading the image, go back to the Sprytile tab and press  Setup Pixel Texture .",
            "title": "Material Setup"
        },
        {
            "location": "/quick-start/#sprytile-tools",
            "text": "The majority of Sprytile's tools are accessed under  Edit Mode . With a mesh object selected, enter edit mode and open the tool shelf to the Sprytile tab. Press  T  to open the tool shelf if it is hidden from the left of the 3D view. Expand the tool shelf if it is too cramped.    Pixel Density  If you're not using the provided tile set, you might want to change the world pixel density setting. This sets how many pixels fit inside one Blender unit. The provided tile set is based around 32x32 pixel tiles.    Backface Culling  It is recommended to turn off backface culling so you can see the direction the faces are being built in. This is accessible in the right hand panel of the viewport (press 'n' if it is not visible), under the shading foldout.",
            "title": "Sprytile Tools"
        },
        {
            "location": "/quick-start/#build-mode",
            "text": "The build tool creates mesh faces that are UV mapped to the selected tiles. Open Sprytile's tile map mode by pressing the  Build  button. You will notice the tile selection UI popup on the lower right corner of the 3D view, indicating that tile map mode is active.  Exit tile map mode by pressing the  Build  button again or by pressing the  Esc  key. Pressing  Ctrl + Shift + Space  on the keyboard will activate tile map mode again.    Tile Selection UI  The tile selection UI lets you pick the tile you will be painting with. Zoom the UI by hovering over it and scrolling your mouse wheel up or down.",
            "title": "Build Mode"
        },
        {
            "location": "/quick-start/#tile-building-workflow",
            "text": "Now to get familiar with Sprytile's workflow by building something!  First, delete the existing vertices of the selected mesh so we have a blank slate. Do this by pressing  a  to select all, and then pressing  x  and selecting  Vertices .  The workflow of Sprytile revolves around Blender's 3D cursor and the direction the 3D view is facing.  The 3D cursor is the center of the tile grid when you're painting, and the global axis that the view is facing is the surface you will be painting on.  Let's start by reseting the 3D cursor to the center of the scene by pressing  Shift + S  and selecting  Cursor to Center .   With the tile selection UI open, try rotating the 3D view camera around. Hold down the middle mouse button while the mouse cursor is in the 3D view and move the mouse.   Notice that a grid appears around the blender 3D cursor. This is called the work plane and indicates the plane that you'll be building on.  By default, the work plane appears when the view camera is panned. If it does not,  check the settings .  Tilt the camera downwards so that the work plane is aligned to the ground.  In the tile selection UI, choose the grass tile and paint around the 3D cursor. Notice how the tile grid is centered around the 3D cursor and the painted tiles appear on the ground.   Now pan the camera up so the work plane is vertical. Pick a wall tile and paint with the tile.    Axis Indicator  While tile map mode is activated, the axis indicator in the Sprytile Painter panel will update to show you which axis the tiles will be painted on.    Since the 3D cursor is an important part of the Sprytile workflow, you can quickly reposition the cursor to the vertex nearest the mouse cursor by holding down the  S  key while in tile map mode. To make navigation easier, pressing the  W  key will center the 3D view around the cursor.   Try reorienting the 3D view to face the last axis you have yet to paint on, then moving the 3D cursor by holding down the  S  key and moving your mouse. Paint on that axis. Note that the center of the grid has moved to where you have positioned the cursor.    Beta software!  Sprytile is still in beta. If Sprytile stops responding during this tutorial, use the reset function under the utilities dropdown.",
            "title": "Tile Building Workflow"
        },
        {
            "location": "/quick-start/#tile-grids",
            "text": "Now that you know how to use Sprytile, let's focus on tile grids. Tile maps might be made up of tiles in different scales. To account for this, Sprytile allows you to paint tiles in different sizes. This part of the Sprytile panel allows you to create and organize the grid settings used with the tile map.  Press the  +  button at the panel and select the newly created entry. The settings for this new tile grid can be changed in the boxes below. For this tile grid, lets change it to a 16 x 16 tile size.    You can see that the tile selection UI updates to show the currently selected tile grid as well. You can change the tile grid selection by using the tile grid selector in the tools panel.  You can also change tile grids by holding  Ctrl  with your mouse over the tile selection UI and scrolling the mousewheel up or down.",
            "title": "Tile Grids"
        },
        {
            "location": "/quick-start/#tile-flippingrotation",
            "text": "Looking closely at the last wall we created, we can see that the texture gets very repetitive. Delete part of that wall and recreate the wall using the 16x16 tile grid. By using the smaller grid, we can break up the pattern created by the larger tile size.   But even with the smaller tiles, the repetition is still visible. With tile map editors, you can further break up the patterns by rotating and flipping tiles. To do that, we use this part of the Sprytile panel.   The keyboard shortcuts for rotating tiles left and right are the  1  and  2  keys.  The  3  key toggles Flip X and the  4  key toggles Flip Y.  Repaint the wall using the tile flipping and rotation options.   Tile Picker  You can pick tiles from your scene like in Photoshop. Hold down the  alt  key and select a tile from the scene with a left mouse click.",
            "title": "Tile Flipping/Rotation"
        },
        {
            "location": "/quick-start/#pixel-translate",
            "text": "This wall is placed in an awkward position. Sprytile makes moving faces easier in tile map mode by constraining movement to the pixel grid. Select the wall faces and split them by pressing the  Y  key. Now translate the selection by pressing the  G  key. The movement snaps to the pixel grid and a readout showing the movement is shown on the top left corner.   Build Mode Automerge  It's necessary to split the faces because build mode automatically merges close vertices by default. You can turn off this option by toggling  Auto Merge  beneath the tile rotation/flip section.    Use the pixel translation tool to move the wall to a more sensible place. The movement is restricted along the work plane, so rotate the 3D view when necessary. Pixel translate is automatically used when in tile map mode.    Snap Translate Vertices  By default, pixel translate will snap the selected vertices to the pixel grid around the 3D cursor. This can be turned off using the  Snap Translate  option in the Workflow panel.",
            "title": "Pixel Translate"
        },
        {
            "location": "/quick-start/#paint-mode",
            "text": "Finally, we'll cover paint mode. Paint mode gives you tools to quickly UV map faces to tiles, allowing you to build your mesh with other Blender tools. Let's extrude the edges of the grass without using tile map mode so that the geometry isn't on the pixel grid anymore.   Next, turn on paint mode by pressing the  Paint  button in the Sprytile panel. Using the 32x32 tile grid, select the tile that is the border of the grass and the ground.   Now try painting the tile on one of the extruded faces. The texture appears stretched because of the current paint settings.   Change the paint settings to the following and try painting the faces again.   Now the grass/ground boundary appears because UV mapping of the face is being aligned to the top of the tile. Continue painting the other extruded faces.",
            "title": "Paint Mode"
        },
        {
            "location": "/quick-start/#advanced-painting",
            "text": "Paint mode allows for easy UV mapping even when the face is not aligned to the global XYZ axis. Using the create tab, make a low poly\ncylinder and rotate it so it is not aligned to the global XYZ axis.   Switch to the 16x16 tile grid and select the following tile. Make sure that grid rotation is back at 0 and that Flip X and Y are off.   If you try painting the outer faces of the cylinder, you will notice that the alignment of the UV is not correct. To fix this, we can use hinting mode. Toggle on hinting in the Sprytile panel.   Switch to edge selection mode and select one of the cylinder's edges along the long side. Then paint on the faces connected to the selected edge and notice that the UV mapping is now properly aligned to the face.   What hinting does is indicate to Sprytile which side of the face will be aligned to the horizontal axis of the tile map.  The cylinder still doesn't look like our selected tile. To fix this, we can use the stretch options on the paint tool.   With the stretch options on, repeat painting the faces as with the previous step. Now the faces will be UV mapped with the selected tile stretched out over each face, looking more like the metallic pipe of the selected tile.",
            "title": "Advanced Painting"
        },
        {
            "location": "/quick-start/#conclusion",
            "text": "This tutorial gives an overview of Sprytile's basic functions, hopefully enough to help you to build cool things with it.  For more advanced uses of Sprytile, check the  Advanced Features  tutorial page.  If you have any questions, feel free to contact me on  twitter  or via the  itch.io discussion boards .",
            "title": "Conclusion"
        },
        {
            "location": "/advanced-features/",
            "text": "Advanced Features\n\u00b6\n\n\nThis tutorial covers additional Sprytile features not covered in the quick start guide.\n\n\nWork Plane Cursor\n\u00b6\n\n\nThe work plane is a visual indicator around the Blender cursor which shows the plane you will be painting on, and the fill area when using the fill tool.\n\n\nThere are three options for the display of the work plane cursor:\n\n\n\n\nOff - Hide the work plane cursor.\n\n\nOn - Always display the work plane cursor.\n\n\nView - Only show the work plane cursor when the view is changed.\n\n\n\n\nThese are accessible in Sprytile's workflow panel. There are additional options for the work plane cursor when the foldout is expanded by pressing the triangle on the left.\n\n\n\n\nPlane Color - Color of the work plane grid.\n\n\nPlane Size - Size of the work plane.\n\n\n\n\n\n\nCursor/Work Plane Navigation\n\u00b6\n\n\nAs covered in the quick start tutorial, holding down the \nS\n key in tile paint mode snaps Blender's cursor to mesh vertices.\n\n\nAnother snapping mode available is grid snapping. This snaps the cursor to the selected tile grid, centered around the cursor. This lets you move the cursor to positions without existing vertices.\n\n\nYou can change between snapping modes via a toggle in the workflow panel.\n\n\n\n\nYou can also toggle between snap modes by pressing the \nshift\n key while holding down \nS\n to snap the cursor.\n\n\nWhile holding down \nS\n, the work plane can be moved along its axis by scrolling the mouse wheel up or down, letting you easily change layers.\n\n\nSprytile Painter Panel\n\u00b6\n\n\nThis section covers features accessible from Sprytile's paint panel.\n\n\nBuilding Off Axis\n\u00b6\n\n\nThe build tool is not limited to the global X/Y/Z axis. The \nSet Normal\n button lets you to pick a normal to use the build tool with.\n\n\nPaint ground tiles as shown below, with one tile sticking out, and move the 3D cursor to the indicated vertex.\n\n\n\n\nSet the pivot point mode to 3D cursor, and rotate the tile that is sticking out so that its not oriented on the x/y/z axis anymore.\n\n\n\n\n\n\nIn the Sprytile paint tools, press the \nSet Normal\n button on the left most side.\n\n\n\n\nMove the mouse cursor back into the scene. The cursor is now a cross, indicating that Sprytile is in Set Normal mode. Left click on the rotated tile.\n\n\n\n\nThe axis indicator in the Sprytile panel now shows that it is locked, and Sprytile's tool mode goes back to Build.\n\n\n\n\nWith the work plane on, we can see that it is now aligned along the face normal. Use the build tool along this plane.\n\n\n\n\nTo go back to using the global X/Y/Z axis for the build tool, deselect the \nLock\n button.\n\n\nAxis Lock\n\u00b6\n\n\nThe \nLock\n button can also be pressed without using the \nSet Normal\n mode.\n\n\nWhen pressed, Sprytile's work plane will be locked to the current axis, allowing you to change the viewing angle while working on a consistent plane.\n\n\nMulti tile select\n\u00b6\n\n\nWhile using Sprytile, you may have noticed that you can select multiple tiles in the UI and build/paint with them. This feature allows for greater flexibility while working with tilesets.\n\n\nHowever, this can also generate a lot of vertices which may be undesirable. To address this, there is the Join Multi option.\n\n\n\n\nThe join multi option will automatically combine multiple selected tiles into one face, making it easier to cleanup or manage triangle counts.\n\n\nUsing this option should be weighed against having the flexibility of having the smaller tiles to modify later on.\n\n\nFill Tool\n\u00b6\n\n\nSprytile can work with large areas by using the fill tool. In fill mode, the work plane will always be displayed.\n\n\nThe area that can be filled is determined by the work plane size. This can be configured in the paint tools panel under fill mode.\n\n\n\n\nFirst, switch to fill mode and set the size of your work plane.\n\n\nThen using grid mode snap, position the work plane to an empty area.\n\n\nSwitch work plane mode to \non\n and use the build tool to draw something in the work plane.\n\n\n\n\nNext, pick a different tile and use the fill tool to fill in your drawing.\n\n\n\n\nNote that the fill tool only works on faces that lie on the work plane grid.\n\n\nTurning on the \nLock Transforms\n fill tool option will preserve any tile flips or rotations of the faces that you fill.\n\n\nMultiple Materials\n\u00b6\n\n\nSprytile accommodates multiple materials so that different textures can be used in the scene.\n\n\nIn the tile grid section of the Sprytile panel select the dropdown and press the \nNew Shadeless Material\n option.\n\n\n\n\n\n\nMaterial Renaming\n\n\nIf the material name is edited in the Material tab, the tild grid display may say \"Invalid Data\". Use the \nValidate Material Grids\n option in the dropdown if this happens.\n\n\n\n\nIn Blender's property panel, select the newly created material in the \nMaterial\n tab, and then switch to the \nTexture\n tab to set the texture file.\n\n\n\n\nGo back to the Sprytile tile grid dropdown and select \nSetup Pixel Texture\n to apply pixel art settings to the texture.\n\n\nThere is now a new tile grid entry in Sprytile's tile grid section for the material. Create, edit, and use tile grids for the new material as usual.\n\n\n\n\nAdditional Tile Grid Settings\n\u00b6\n\n\nExpanding \nExtra UV Grid Settings\n will allow you to change advanced options for each tile grid.\n\n\n\n\nOffset\n\u00b6\n\n\nOffset changes the origin of the tile grid in the tileset texture. This allows for grids of different sizes to be used in one texture without having to find a common denominator to make the grids fit.\n\n\nThe origin of the offset is from the lower left corner of the texture.\n\n\nUV Rotation\n\u00b6\n\n\nApplies a rotation on the tile grids. If you can figure out a cool use for this, let me know!\n\n\nPadding\n\u00b6\n\n\nPadding will give each tile a safe area that can be used to \naccomodate texture bleeding\n in certain game engines.\n\n\nWhen starting with a 32x32 tile grid, adding a 1x1 padding will automatically change the tile grid to 30x30.\n\n\nMargins\n\u00b6\n\n\nSome existing tileset have spaces between tiles. The margins settings will let you accomodate for these. \n\n\nWorkflow Panel\n\u00b6\n\n\nThese are features that appear in Sprytile's workflow panel.\n\n\nReload All Images\n\u00b6\n\n\nAfter editing a tile set image in an external editor, press this button to quickly reload the texture file.\n\n\nAdditionally, you can toggle the \nauto\n button to automatically reload textures after they have been edited.\n\n\n\n\nMake Double Sided\n\u00b6\n\n\nThis is only recommended as a step for finishing your model. If your model will be used in a context where double sided faces is not possible or will not be used, certain details may not look right.\n\n\nThis is best demonstrated by turning on backface culling in Blender.\n\n\n\n\nSprytile has a utility that duplicates faces and flips the normals, effectively turning the face into a double sided face.\n\n\nThis is only recommended as a finishing step because it creates more faces and makes editing the model more difficult.\n\n\nSelect the faces that you want to make double sided, and then go to the Sprytile Utilities dropdown and select \nMake Double Sided\n.",
            "title": "Advanced Features"
        },
        {
            "location": "/advanced-features/#advanced-features",
            "text": "This tutorial covers additional Sprytile features not covered in the quick start guide.",
            "title": "Advanced Features"
        },
        {
            "location": "/advanced-features/#work-plane-cursor",
            "text": "The work plane is a visual indicator around the Blender cursor which shows the plane you will be painting on, and the fill area when using the fill tool.  There are three options for the display of the work plane cursor:   Off - Hide the work plane cursor.  On - Always display the work plane cursor.  View - Only show the work plane cursor when the view is changed.   These are accessible in Sprytile's workflow panel. There are additional options for the work plane cursor when the foldout is expanded by pressing the triangle on the left.   Plane Color - Color of the work plane grid.  Plane Size - Size of the work plane.",
            "title": "Work Plane Cursor"
        },
        {
            "location": "/advanced-features/#cursorwork-plane-navigation",
            "text": "As covered in the quick start tutorial, holding down the  S  key in tile paint mode snaps Blender's cursor to mesh vertices.  Another snapping mode available is grid snapping. This snaps the cursor to the selected tile grid, centered around the cursor. This lets you move the cursor to positions without existing vertices.  You can change between snapping modes via a toggle in the workflow panel.   You can also toggle between snap modes by pressing the  shift  key while holding down  S  to snap the cursor.  While holding down  S , the work plane can be moved along its axis by scrolling the mouse wheel up or down, letting you easily change layers.",
            "title": "Cursor/Work Plane Navigation"
        },
        {
            "location": "/advanced-features/#sprytile-painter-panel",
            "text": "This section covers features accessible from Sprytile's paint panel.",
            "title": "Sprytile Painter Panel"
        },
        {
            "location": "/advanced-features/#building-off-axis",
            "text": "The build tool is not limited to the global X/Y/Z axis. The  Set Normal  button lets you to pick a normal to use the build tool with.  Paint ground tiles as shown below, with one tile sticking out, and move the 3D cursor to the indicated vertex.   Set the pivot point mode to 3D cursor, and rotate the tile that is sticking out so that its not oriented on the x/y/z axis anymore.    In the Sprytile paint tools, press the  Set Normal  button on the left most side.   Move the mouse cursor back into the scene. The cursor is now a cross, indicating that Sprytile is in Set Normal mode. Left click on the rotated tile.   The axis indicator in the Sprytile panel now shows that it is locked, and Sprytile's tool mode goes back to Build.   With the work plane on, we can see that it is now aligned along the face normal. Use the build tool along this plane.   To go back to using the global X/Y/Z axis for the build tool, deselect the  Lock  button.",
            "title": "Building Off Axis"
        },
        {
            "location": "/advanced-features/#axis-lock",
            "text": "The  Lock  button can also be pressed without using the  Set Normal  mode.  When pressed, Sprytile's work plane will be locked to the current axis, allowing you to change the viewing angle while working on a consistent plane.",
            "title": "Axis Lock"
        },
        {
            "location": "/advanced-features/#multi-tile-select",
            "text": "While using Sprytile, you may have noticed that you can select multiple tiles in the UI and build/paint with them. This feature allows for greater flexibility while working with tilesets.  However, this can also generate a lot of vertices which may be undesirable. To address this, there is the Join Multi option.   The join multi option will automatically combine multiple selected tiles into one face, making it easier to cleanup or manage triangle counts.  Using this option should be weighed against having the flexibility of having the smaller tiles to modify later on.",
            "title": "Multi tile select"
        },
        {
            "location": "/advanced-features/#fill-tool",
            "text": "Sprytile can work with large areas by using the fill tool. In fill mode, the work plane will always be displayed.  The area that can be filled is determined by the work plane size. This can be configured in the paint tools panel under fill mode.   First, switch to fill mode and set the size of your work plane.  Then using grid mode snap, position the work plane to an empty area.  Switch work plane mode to  on  and use the build tool to draw something in the work plane.   Next, pick a different tile and use the fill tool to fill in your drawing.   Note that the fill tool only works on faces that lie on the work plane grid.  Turning on the  Lock Transforms  fill tool option will preserve any tile flips or rotations of the faces that you fill.",
            "title": "Fill Tool"
        },
        {
            "location": "/advanced-features/#multiple-materials",
            "text": "Sprytile accommodates multiple materials so that different textures can be used in the scene.  In the tile grid section of the Sprytile panel select the dropdown and press the  New Shadeless Material  option.    Material Renaming  If the material name is edited in the Material tab, the tild grid display may say \"Invalid Data\". Use the  Validate Material Grids  option in the dropdown if this happens.   In Blender's property panel, select the newly created material in the  Material  tab, and then switch to the  Texture  tab to set the texture file.   Go back to the Sprytile tile grid dropdown and select  Setup Pixel Texture  to apply pixel art settings to the texture.  There is now a new tile grid entry in Sprytile's tile grid section for the material. Create, edit, and use tile grids for the new material as usual.",
            "title": "Multiple Materials"
        },
        {
            "location": "/advanced-features/#additional-tile-grid-settings",
            "text": "Expanding  Extra UV Grid Settings  will allow you to change advanced options for each tile grid.",
            "title": "Additional Tile Grid Settings"
        },
        {
            "location": "/advanced-features/#offset",
            "text": "Offset changes the origin of the tile grid in the tileset texture. This allows for grids of different sizes to be used in one texture without having to find a common denominator to make the grids fit.  The origin of the offset is from the lower left corner of the texture.",
            "title": "Offset"
        },
        {
            "location": "/advanced-features/#uv-rotation",
            "text": "Applies a rotation on the tile grids. If you can figure out a cool use for this, let me know!",
            "title": "UV Rotation"
        },
        {
            "location": "/advanced-features/#padding",
            "text": "Padding will give each tile a safe area that can be used to  accomodate texture bleeding  in certain game engines.  When starting with a 32x32 tile grid, adding a 1x1 padding will automatically change the tile grid to 30x30.",
            "title": "Padding"
        },
        {
            "location": "/advanced-features/#margins",
            "text": "Some existing tileset have spaces between tiles. The margins settings will let you accomodate for these.",
            "title": "Margins"
        },
        {
            "location": "/advanced-features/#workflow-panel",
            "text": "These are features that appear in Sprytile's workflow panel.",
            "title": "Workflow Panel"
        },
        {
            "location": "/advanced-features/#reload-all-images",
            "text": "After editing a tile set image in an external editor, press this button to quickly reload the texture file.  Additionally, you can toggle the  auto  button to automatically reload textures after they have been edited.",
            "title": "Reload All Images"
        },
        {
            "location": "/advanced-features/#make-double-sided",
            "text": "This is only recommended as a step for finishing your model. If your model will be used in a context where double sided faces is not possible or will not be used, certain details may not look right.  This is best demonstrated by turning on backface culling in Blender.   Sprytile has a utility that duplicates faces and flips the normals, effectively turning the face into a double sided face.  This is only recommended as a finishing step because it creates more faces and makes editing the model more difficult.  Select the faces that you want to make double sided, and then go to the Sprytile Utilities dropdown and select  Make Double Sided .",
            "title": "Make Double Sided"
        },
        {
            "location": "/creating-tilesets/",
            "text": "Creating Tilesets\n\u00b6\n\n\nThese are high level guidelines for creating tilesets and is not a tutorial for how to create tile sets.\n\n\nPower of Two Sizes\n\u00b6\n\n\nBlender and Sprytile are working with 3D models and thus have the limitations associated with 3D.\n\n\nOne of these limitations is the recommendation that textures should be in \nPower of Two\n sizes.\n\n\nIn the simplest terms, power of two sizes means that textures should have widths and heights that are any of the following pixel sizes:\n\n\n\n\nPower of Two Sizes\n\n\n8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096\n\n\n\n\nWhile Blender's own renderer can handle non Power of Two textures, many real time renderers may have issues with using non Power of Two textures which can lead to a blurry look.\n\n\nIt is highly recommended to stick to these sizes when creating tilesets for use with Sprytile.\n\n\nIf you wish to find out more about the technical details of power of two textures, this is a \ngood primer\n to read.\n\n\nHigh Resolution Tilesets\n\u00b6\n\n\nWhile theoretically possible, high resolution tiles sets have not been tested yet. There is a high likelihood that you will need to use \nadvanced tile grid settings\n and use padding to \navoid texture bleeding\n.",
            "title": "Creating Tilesets"
        },
        {
            "location": "/creating-tilesets/#creating-tilesets",
            "text": "These are high level guidelines for creating tilesets and is not a tutorial for how to create tile sets.",
            "title": "Creating Tilesets"
        },
        {
            "location": "/creating-tilesets/#power-of-two-sizes",
            "text": "Blender and Sprytile are working with 3D models and thus have the limitations associated with 3D.  One of these limitations is the recommendation that textures should be in  Power of Two  sizes.  In the simplest terms, power of two sizes means that textures should have widths and heights that are any of the following pixel sizes:   Power of Two Sizes  8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096   While Blender's own renderer can handle non Power of Two textures, many real time renderers may have issues with using non Power of Two textures which can lead to a blurry look.  It is highly recommended to stick to these sizes when creating tilesets for use with Sprytile.  If you wish to find out more about the technical details of power of two textures, this is a  good primer  to read.",
            "title": "Power of Two Sizes"
        },
        {
            "location": "/creating-tilesets/#high-resolution-tilesets",
            "text": "While theoretically possible, high resolution tiles sets have not been tested yet. There is a high likelihood that you will need to use  advanced tile grid settings  and use padding to  avoid texture bleeding .",
            "title": "High Resolution Tilesets"
        },
        {
            "location": "/using-tilesets/",
            "text": "Using Existing Tilesets\n\u00b6\n\n\nBy using \ntilegrid settings\n, Sprytile can use existing 2D tilesets assets but some care should be taken in how you use them.\n\n\nPower of Two Texture Sizes\n\u00b6\n\n\nThe importance of Power of Two texture sizes is discussed in detail in \ncreating tilesets\n.\n\n\nIf you wish to use your scenes in a game engine, you will likely need to resize the tileset you want to use so that it is a power of two size.\n\n\nThe easiest way to do this is to expand the canvas size so that it becomes a power of two size. The downside is that this is a wasteful use of texture space in 3D engines.\n\n\nThe recommended method that takes more work is to remove tiles from the tileset that will not be used, or to split the tileset into multiple textures that are power of two sized.\n\n\nUI considerations\n\u00b6\n\n\nRelated to the texture sizes, the Sprytile UI was not designed with existing tile sets in mind. Most 2D asset packs put every tile into one texture which makes them difficult to use with Sprytile.\n\n\nAs above, consider splitting big asset packs into smaller textures in an image editor for ease of use in Sprytile.",
            "title": "Using Tilesets"
        },
        {
            "location": "/using-tilesets/#using-existing-tilesets",
            "text": "By using  tilegrid settings , Sprytile can use existing 2D tilesets assets but some care should be taken in how you use them.",
            "title": "Using Existing Tilesets"
        },
        {
            "location": "/using-tilesets/#power-of-two-texture-sizes",
            "text": "The importance of Power of Two texture sizes is discussed in detail in  creating tilesets .  If you wish to use your scenes in a game engine, you will likely need to resize the tileset you want to use so that it is a power of two size.  The easiest way to do this is to expand the canvas size so that it becomes a power of two size. The downside is that this is a wasteful use of texture space in 3D engines.  The recommended method that takes more work is to remove tiles from the tileset that will not be used, or to split the tileset into multiple textures that are power of two sized.",
            "title": "Power of Two Texture Sizes"
        },
        {
            "location": "/using-tilesets/#ui-considerations",
            "text": "Related to the texture sizes, the Sprytile UI was not designed with existing tile sets in mind. Most 2D asset packs put every tile into one texture which makes them difficult to use with Sprytile.  As above, consider splitting big asset packs into smaller textures in an image editor for ease of use in Sprytile.",
            "title": "UI considerations"
        },
        {
            "location": "/sketchfab/",
            "text": "Exporting for Sketchfab\n\u00b6\n\n\nThese are settings I've found to be a good base for making your low poly pixel art texture models look good in \nSketchfab\n. Think of this as a base, there are additional ways to make presenting your models more eye catching in Sketchfab!\n\n\nPower of Two Textures\n\u00b6\n\n\nIf you've read the previous guides, you may know by now how important it is \nto have power of two sized textures\n for your 3D models, and it is especially important with Sketchfab.\n\n\nThe technology used by Sketchfab to display models is sensitive to sizes and non power of two textures will have artifacts no matter how closely you follow the rest of this guide.\n\n\nThere are workarounds to this limitation if necessary, but it will always result in some artifacts.\n\n\nExport To Sketchfab\n\u00b6\n\n\nSketchfab has an exporter for Blender that can easily upload your work from inside Blender.\n\n\nJust \ninstall the Blender exporter\n and \nfollow the export tutorial\n.\n\n\nSketchfab 3D Settings\n\u00b6\n\n\nOnce you've exported your model from Blender to Sketchfab, go to the sketchfab website in your browser and edit the 3D settings for your model.\n\n\n\n\nFirst, set the renderer and shading type to Classic and Shadeless respectively.\n\n\n\n\nNext, go to the Materials tab, and in the diffuse settings expand the dropdown to get to texture settings. Set filtering to \nNearest\n, format to \nRGB\n, and both wrap settings to \nRepeat\n\n\n\n\nNext, scroll down to the transparency settings and set it to \nBlending\n, with the slider turned all the way down to zero.\n\n\n\n\nAnd finally, expand the dropdown in the transparency to get to the alpha texture settings. Set filtering to \nNearest\n, the format to \nAlpha\n, and both wrap settings to \nRepeat\n\n\n\n\n\n\nThese settings provide a good base for the low poly pixel art style of 3D. You can experiment with the how you present your models by playing with the \npost processing effects on Sketchfab\n, or even trying out animations.\n\n\nNon Power of Two Workaround\n\u00b6\n\n\nIf your texture cannot be power of two, one thing you can do is to scale up the texture by 2x, 3x, or 4x in an image editor. This will result in a larger texture, but may hide some of the artifacts caused by smaller non power of two sized textures.",
            "title": "Sketchfab Export"
        },
        {
            "location": "/sketchfab/#exporting-for-sketchfab",
            "text": "These are settings I've found to be a good base for making your low poly pixel art texture models look good in  Sketchfab . Think of this as a base, there are additional ways to make presenting your models more eye catching in Sketchfab!",
            "title": "Exporting for Sketchfab"
        },
        {
            "location": "/sketchfab/#power-of-two-textures",
            "text": "If you've read the previous guides, you may know by now how important it is  to have power of two sized textures  for your 3D models, and it is especially important with Sketchfab.  The technology used by Sketchfab to display models is sensitive to sizes and non power of two textures will have artifacts no matter how closely you follow the rest of this guide.  There are workarounds to this limitation if necessary, but it will always result in some artifacts.",
            "title": "Power of Two Textures"
        },
        {
            "location": "/sketchfab/#export-to-sketchfab",
            "text": "Sketchfab has an exporter for Blender that can easily upload your work from inside Blender.  Just  install the Blender exporter  and  follow the export tutorial .",
            "title": "Export To Sketchfab"
        },
        {
            "location": "/sketchfab/#sketchfab-3d-settings",
            "text": "Once you've exported your model from Blender to Sketchfab, go to the sketchfab website in your browser and edit the 3D settings for your model.   First, set the renderer and shading type to Classic and Shadeless respectively.   Next, go to the Materials tab, and in the diffuse settings expand the dropdown to get to texture settings. Set filtering to  Nearest , format to  RGB , and both wrap settings to  Repeat   Next, scroll down to the transparency settings and set it to  Blending , with the slider turned all the way down to zero.   And finally, expand the dropdown in the transparency to get to the alpha texture settings. Set filtering to  Nearest , the format to  Alpha , and both wrap settings to  Repeat    These settings provide a good base for the low poly pixel art style of 3D. You can experiment with the how you present your models by playing with the  post processing effects on Sketchfab , or even trying out animations.",
            "title": "Sketchfab 3D Settings"
        },
        {
            "location": "/sketchfab/#non-power-of-two-workaround",
            "text": "If your texture cannot be power of two, one thing you can do is to scale up the texture by 2x, 3x, or 4x in an image editor. This will result in a larger texture, but may hide some of the artifacts caused by smaller non power of two sized textures.",
            "title": "Non Power of Two Workaround"
        }
    ]
}